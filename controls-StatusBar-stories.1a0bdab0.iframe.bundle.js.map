{"version":3,"file":"controls-StatusBar-stories.1a0bdab0.iframe.bundle.js","mappings":";AAgBA;AAGA;AAcA;AAGA","sources":["webpack://@tatuarvela/wisp/./src/controls/StatusBar.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { windowResizeHandler } from '../window/handlers/windowResizeHandler';\nimport { useWindowManager } from '../windowManager/hooks';\nimport { Direction, WindowType } from '../windowManager/types';\n\nexport const StatusBarThemeProperties = ['ResizeHandle', 'StatusBar'] as const;\n\ninterface StatusBarProps {\n  children: React.ReactNode;\n  showResizeHandle?: boolean;\n  window?: WindowType;\n}\n\nconst StatusBarElement = styled.div`\n  ${(props) => props.theme.controls.StatusBar}\n`;\n\nconst StatusBar = ({ children, showResizeHandle, window }: StatusBarProps) => {\n  return (\n    <StatusBarElement>\n      {children}\n      {showResizeHandle && <ResizeHandle window={window} />}\n    </StatusBarElement>\n  );\n};\n\ninterface ResizeHandleProps {\n  window: WindowType;\n}\n\nconst ResizeHandleElement = styled.div`\n  ${(props) => props.theme.controls.ResizeHandle}\n`;\n\nconst ResizeHandle = ({ window }: ResizeHandleProps): JSX.Element => {\n  const windowManager = useWindowManager();\n  const eventHandler = windowResizeHandler(windowManager, window);\n\n  return (\n    <ResizeHandleElement onMouseDown={(e) => eventHandler(e, Direction.SE)} />\n  );\n};\n\nexport default StatusBar;\n"],"names":[],"sourceRoot":""}