{"version":3,"file":"Basics-stories.3698514f.iframe.bundle.js","mappings":";AAaA;AAQA;AACA;AASA;AC1BA;AAGA;ACIA;AAGA;ACVA;AAGA;ACEA;AAGA","sources":["webpack://@tatuarvela/wisp/./src/controls/Button.tsx","webpack://@tatuarvela/wisp/./src/controls/MessageBoxText.tsx","webpack://@tatuarvela/wisp/./src/controls/MessageBoxButton.tsx","webpack://@tatuarvela/wisp/./src/controls/MessageBoxContent.tsx","webpack://@tatuarvela/wisp/./src/controls/MessageBoxIcon.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const ButtonThemeProperties = [\n  'ButtonElement',\n  'ButtonWrapper',\n] as const;\n\nexport interface ButtonWrapperProps {\n  disabled?: boolean;\n}\n\nconst ButtonWrapper = styled.div<ButtonWrapperProps>`\n  ${(props) => props.theme.controls.ButtonWrapper}\n`;\n\nexport interface ButtonElementProps\n  extends React.ComponentPropsWithoutRef<'button'> {\n  disabled?: boolean;\n}\n\nconst ButtonElement = styled.button`\n  ${(props) => props.theme.controls.ButtonElement}\n`;\n\nexport interface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  disabled?: boolean;\n  height?: number;\n  width?: number;\n}\n\nexport const Button = ({ width, height, disabled, ...rest }: ButtonProps) => (\n  <ButtonWrapper\n    disabled={disabled}\n    style={{ width: `${width}px`, height: `${height}px` }}\n  >\n    <ButtonElement disabled={disabled} {...rest} />\n  </ButtonWrapper>\n);\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const MessageBoxTextThemeProperties = ['MessageBoxText'] as const;\n\nexport const MessageBoxText = styled.div`\n  ${(props) => props.theme.controls.MessageBoxText}\n`;\n\nexport default MessageBoxText;\n","import React, { ComponentProps } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../controls/Button';\nimport { useWindow } from '../window';\nimport { useWindowManager } from '../windowManager/hooks';\n\nexport const MessageBoxButtonThemeProperties = [\n  'MessageBoxButtonElement',\n] as const;\n\nconst MessageBoxButtonElement = styled(Button)`\n  ${(props) => props.theme.controls.MessageBoxButtonElement}\n`;\n\nconst MessageBoxButton = (\n  props: ComponentProps<typeof MessageBoxButtonElement>\n) => {\n  const { id } = useWindow();\n  const { closeWindow } = useWindowManager();\n  const defaultOnClick = () => closeWindow(id);\n  const onClick = props.onClick ?? defaultOnClick;\n  return <MessageBoxButtonElement {...props} onClick={onClick} />;\n};\n\nexport default MessageBoxButton;\n","import styled from 'styled-components';\n\nexport const MessageBoxContentThemeProperties = ['MessageBoxContent'] as const;\n\nexport const MessageBoxContent = styled.div`\n  ${(props) => props.theme.controls.MessageBoxContent}\n`;\n\nexport default MessageBoxContent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Icon } from '../icons';\nimport { getIconFileForSize } from '../icons/utils';\nimport { useThemeManager } from '../themeManager/hooks';\n\nexport const MessageBoxIconThemeProperties = ['MessageBoxIconElement'] as const;\n\nconst MessageBoxIconElement = styled.img`\n  ${(props) => props.theme.controls.MessageBoxIconElement}\n`;\n\nconst MessageBoxIcon = ({ icon }: { icon: string | Icon }) => {\n  const { theme } = useThemeManager();\n\n  const resolvedIcon = typeof icon === 'string' ? theme.icons[icon] : icon;\n  if (!resolvedIcon) {\n    return null;\n  }\n\n  const iconFile = getIconFileForSize(resolvedIcon);\n  return <MessageBoxIconElement src={iconFile} />;\n};\n\nexport default MessageBoxIcon;\n"],"names":[],"sourceRoot":""}