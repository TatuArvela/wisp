{"version":3,"file":"controls-Textarea-stories.364332d9.iframe.bundle.js","mappings":";AAYA;AAOA;AACA;AAOA;AACA;AAUA;AC5BA;AAGA","sources":["webpack://@tatuarvela/wisp/./src/controls/Textarea.tsx","webpack://@tatuarvela/wisp/./src/controls/ControlWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport ControlWrapper, { ControlWrapperProps } from './ControlWrapper';\n\nexport const TextareaThemeProperties = [\n  'TextareaWrapper',\n  'TextareaLabel',\n  'TextareaElement',\n] as const;\n\nconst TextareaWrapper = styled(ControlWrapper)`\n  ${(props) => props.theme.controls.TextareaWrapper}\n`;\n\nexport interface TextareaLabelProps {\n  disabled?: boolean;\n}\n\nconst TextareaLabel = styled.label<TextareaLabelProps>`\n  ${(props) => props.theme.controls.TextareaLabel}\n`;\n\nexport interface TextareaElementProps {\n  disabled?: boolean;\n}\n\nconst TextareaElement = styled.textarea<TextareaElementProps>`\n  ${(props) => props.theme.controls.TextareaElement}\n`;\n\nexport interface TextareaProps extends ControlWrapperProps {\n  disabled?: boolean;\n  label?: string;\n  onChange(value: string): void;\n  value?: string;\n}\n\nexport const Textarea = ({\n  disabled,\n  inlineLabel,\n  label,\n  onChange,\n  value,\n}: TextareaProps) => (\n  <TextareaWrapper inlineLabel={inlineLabel}>\n    {label && <TextareaLabel disabled={disabled}>{label}</TextareaLabel>}\n    <TextareaElement\n      disabled={disabled}\n      value={value}\n      onChange={(event) => onChange(event.target.value)}\n    />\n  </TextareaWrapper>\n);\n\nexport default Textarea;\n","import styled from 'styled-components';\n\nexport const ControlWrapperThemeProperties = ['ControlWrapper'] as const;\n\nexport interface ControlWrapperProps {\n  inlineLabel?: boolean;\n}\n\n// internal\nconst ControlWrapper = styled.div<ControlWrapperProps>`\n  ${(props) => props.theme.controls.ControlWrapper}\n`;\n\nexport default ControlWrapper;\n"],"names":[],"sourceRoot":""}