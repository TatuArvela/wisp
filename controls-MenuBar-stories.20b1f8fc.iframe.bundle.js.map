{"version":3,"file":"controls-MenuBar-stories.20b1f8fc.iframe.bundle.js","mappings":";AAqCA;AASA;AAyCA;AAQA;AACA","sources":["webpack://@tatuarvela/wisp/./src/controls/MenuBar.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { Icon } from '../icons';\nimport { getIconFileForSize } from '../icons/utils';\nimport { useThemeManager } from '../themeManager/hooks';\n\nexport const MenuBarThemeProperties = [\n  'MenuBarElement',\n  'MenuBarThrobberIconElement',\n  'MenuBarThrobberContainer',\n] as const;\n\nexport interface MenuBarProps {\n  children?: React.ReactNode;\n  isThrobberActive?: boolean;\n  throbberActiveIcon?: Icon;\n  throbberIcon?: Icon;\n}\n\nexport const MenuBar = ({\n  children,\n  isThrobberActive,\n  throbberActiveIcon,\n  throbberIcon,\n}: MenuBarProps) => (\n  <MenuBarElement>\n    {children}\n    <MenuBarThrobber\n      isActive={isThrobberActive}\n      icon={throbberIcon}\n      activeIcon={throbberActiveIcon}\n    />\n  </MenuBarElement>\n);\n\nconst MenuBarElement = styled.div`\n  ${(props) => props.theme.controls.MenuBarElement}\n`;\n\nexport interface MenuBarThrobberProps {\n  activeIcon?: Icon;\n  icon?: Icon;\n  isActive: boolean;\n}\n\nconst MenuBarThrobber = ({\n  activeIcon,\n  icon,\n  isActive,\n}: MenuBarThrobberProps) => (\n  <MenuBarThrobberContainer>\n    <MenuBarThrobberIcon\n      icon={icon}\n      activeIcon={activeIcon}\n      isActive={isActive}\n    />\n  </MenuBarThrobberContainer>\n);\n\nexport interface MenuBarThrobberIconProps {\n  icon: string | Icon;\n  onClick(): void;\n}\n\nconst MenuBarThrobberIcon = ({\n  activeIcon = 'menuBarThrobberActive',\n  icon = 'menuBarThrobber',\n  isActive,\n}: MenuBarThrobberProps) => {\n  const { theme } = useThemeManager();\n\n  const iconToShow = isActive ? activeIcon : icon;\n\n  const resolvedIcon =\n    typeof iconToShow === 'string' ? theme.icons[iconToShow] : iconToShow;\n\n  if (!resolvedIcon) {\n    return null;\n  }\n\n  const iconFile = getIconFileForSize(resolvedIcon);\n\n  return <MenuBarThrobberIconElement src={iconFile} isActive={isActive} />;\n};\n\nconst MenuBarThrobberContainer = styled.div`\n  ${(props) => props.theme.controls.MenuBarThrobberContainer}\n`;\n\nexport interface MenuBarThrobberIconElementProps {\n  isActive: boolean;\n  src: string;\n}\n\nconst MenuBarThrobberIconElement = styled.img<MenuBarThrobberIconElementProps>`\n  ${(props) => props.theme.controls.MenuBarThrobberIconElement}\n`;\n\nexport default MenuBar;\n"],"names":[],"sourceRoot":""}