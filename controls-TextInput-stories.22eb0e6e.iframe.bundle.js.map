{"version":3,"file":"controls-TextInput-stories.22eb0e6e.iframe.bundle.js","mappings":";AAYA;AAOA;AACA;AAOA;AACA;AAUA;AC5BA;AAGA","sources":["webpack://@tatuarvela/wisp/./src/controls/TextInput.tsx","webpack://@tatuarvela/wisp/./src/controls/ControlWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport ControlWrapper, { ControlWrapperProps } from './ControlWrapper';\n\nexport const TextInputThemeProperties = [\n  'TextInputElement',\n  'TextInputLabel',\n  'TextInputWrapper',\n] as const;\n\nconst TextInputWrapper = styled(ControlWrapper)`\n  ${(props) => props.theme.controls.TextInputWrapper}\n`;\n\nexport interface TextInputLabelProps {\n  disabled?: boolean;\n}\n\nconst TextInputLabel = styled.label<TextInputLabelProps>`\n  ${(props) => props.theme.controls.TextInputLabel}\n`;\n\nexport interface TextInputElementProps {\n  disabled?: boolean;\n}\n\nconst TextInputElement = styled.input<TextInputElementProps>`\n  ${(props) => props.theme.controls.TextInputElement}\n`;\n\nexport interface TextInputProps extends ControlWrapperProps {\n  disabled?: boolean;\n  label?: string;\n  onChange(value: string): void;\n  value?: string;\n}\n\nexport const TextInput = ({\n  disabled,\n  inlineLabel,\n  label,\n  onChange,\n  value,\n}: TextInputProps) => (\n  <TextInputWrapper inlineLabel={inlineLabel}>\n    {label && <TextInputLabel disabled={disabled}>{label}</TextInputLabel>}\n    <TextInputElement\n      disabled={disabled}\n      value={value}\n      onChange={(event) => onChange(event.target.value)}\n    />\n  </TextInputWrapper>\n);\n\nexport default TextInput;\n","import styled from 'styled-components';\n\nexport const ControlWrapperThemeProperties = ['ControlWrapper'] as const;\n\nexport interface ControlWrapperProps {\n  inlineLabel?: boolean;\n}\n\n// internal\nconst ControlWrapper = styled.div<ControlWrapperProps>`\n  ${(props) => props.theme.controls.ControlWrapper}\n`;\n\nexport default ControlWrapper;\n"],"names":[],"sourceRoot":""}