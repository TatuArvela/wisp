{"version":3,"file":"controls-MenuBar-stories.fb125779.iframe.bundle.js","mappings":";AAoBA;AAGA;AAmBA;AAQA;AAsBA;AAQA","sources":["webpack://@tatuarvela/wisp/./src/controls/MenuBar.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { Icon } from '../icons';\nimport { getIconFileForSize } from '../icons/utils';\nimport { useThemeManager } from '../themeManager/hooks';\n\nexport const MenuBarThemeProperties = [\n  'MenuBarElement',\n  'MenuBarThrobberIconElement',\n  'MenuBarThrobberContainer',\n] as const;\n\nexport interface MenuBarProps {\n  children?: React.ReactNode;\n  isThrobberAnimated?: boolean;\n  throbberIcon?: Icon;\n}\n\nconst MenuBarElement = styled.div`\n  ${(props) => props.theme.controls.MenuBarElement}\n`;\n\nexport const MenuBar = ({\n  children,\n  isThrobberAnimated,\n  throbberIcon,\n}: MenuBarProps) => {\n  return (\n    <MenuBarElement>\n      {children}\n      <MenuBarThrobber isAnimated={isThrobberAnimated} icon={throbberIcon} />\n    </MenuBarElement>\n  );\n};\n\nexport interface MenuBarThrobberIconElementProps {\n  isAnimated: boolean;\n  src: string;\n}\n\nconst MenuBarThrobberIconElement = styled.img<MenuBarThrobberIconElementProps>`\n  ${(props) => props.theme.controls.MenuBarThrobberIconElement}\n`;\n\nexport interface MenuBarThrobberIconProps {\n  icon: string | Icon;\n  onClick(): void;\n}\n\nconst MenuBarThrobberIcon = ({\n  icon = 'wisp',\n  isAnimated,\n}: MenuBarThrobberProps) => {\n  const { theme } = useThemeManager();\n\n  const resolvedIcon = typeof icon === 'string' ? theme.icons[icon] : icon;\n  if (!resolvedIcon) {\n    return null;\n  }\n\n  const iconFile = getIconFileForSize(resolvedIcon);\n  return (\n    <MenuBarThrobberIconElement\n      src={iconFile}\n      alt=\"Window icon\"\n      isAnimated={isAnimated}\n    />\n  );\n};\n\nconst MenuBarThrobberContainer = styled.div`\n  ${(props) => props.theme.controls.MenuBarThrobberContainer}\n`;\n\nexport interface MenuBarThrobberProps {\n  isAnimated: boolean;\n  icon?: Icon;\n}\n\nconst MenuBarThrobber = ({\n  icon = 'wisp',\n  isAnimated,\n}: MenuBarThrobberProps) => (\n  <MenuBarThrobberContainer>\n    <MenuBarThrobberIcon icon={icon} isAnimated={isAnimated} />\n  </MenuBarThrobberContainer>\n);\n\nexport default MenuBar;\n"],"names":[],"sourceRoot":""}